package br.com.mov.Airsoft.controle;

import static org.mockito.ArgumentMatchers.eq;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import br.com.mov.Airsoft.modelo.Evento;
import br.com.mov.Airsoft.repositorio.EventoRepositorio;

@Controller
@RequestMapping("cadastroevento")
public class Controle {
	@Autowired
	private EventoRepositorio repositorio;

	@GetMapping
	public ResponseEntity<List<Evento>> listarEvento)
	{
		List<br.com.mov.Airsoft.modelo.Evento> lista = repositorio.findAll();
		return ResponseEntity.ok(lista);
	}

	@GetMapping(value = "/{id}")
	public ResponseEntity<Evento> Evento(@PathVariable(name = "id") String id) {
		Optional<br.com.mov.Airsoft.modelo.Evento> opdtionaEquipe = repositorio.findById(id);
		return ResponseEntity.ok(opdtionaEvento.get());
	}

	@PostMapping
	public ResponseEntity<Void> salva(@RequestBody Evento equipe) {
		repositorio.insert(evento);
		return ResponseEntity.status(HttpStatus.CREATED).build();
	}

	@DeleteMapping(value = "/{id}")
	public ResponseEntity<Void> deletar(@PathVariable(name = "id") String id) {
		repositorio.deleteById(id);
		return ResponseEntity.status(HttpStatus.ACCEPTED).build();
	}

	@PutMapping(value = "/{id}")
	public ResponseEntity<Void> atualizar(@PathVariable(name = "id") String id, @Validated @RequestBody EventoDto dto) {
		Optional<Evento> equipe = repositorio.findById(id);
		Evento ev = evento.get();
		eq.setData(dto.getData());
		eq.setDescricao(dto.getDescricao());
		eq.setModalidade(dto.getModalidade());
		repositorio.save(ev);
		return ResponseEntity.status(HttpStatus.ACCEPTED).build();
	}
}
